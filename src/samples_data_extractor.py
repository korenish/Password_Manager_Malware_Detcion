import hashlib
import os

from features_exctrators.extract_pe_features import ExtractFeaturesFromSamplePE
from features_exctrators.extract_strings_features import ExtractFeaturesFromStrings

PATH = "..\\data\\"


def collect_sample_data(sha256: str, sample_path: str):
    # Extract static strings features
    string_features_extractor = ExtractFeaturesFromStrings(sha256, sample_path)
    strings_features = string_features_extractor.extract_strings_features()
    print(strings_features)

    # Extract pe features
    pe_features_extractor = ExtractFeaturesFromSamplePE(sha256, sample_path)
    pe_features = pe_features_extractor.extract_pe_features()
    print(pe_features)

    print('-'*100)

    # Extract VT features ?


if __name__ == '__main__':
    all_samples_paths = [os.path.join(dp, f) for dp, dn, filenames in os.walk(PATH) for f in filenames]

    for curr_sample_path in all_samples_paths:
        curr_sha256 = ''
        try:
            with open(curr_sample_path, "rb") as f:
                f_bytes = f.read()  # read entire file as bytes
                curr_sha256 = hashlib.sha256(f_bytes).hexdigest()
                print(curr_sha256)

        except Exception as e:
            print(f"path {curr_sample_path}, couldn't be opened...: {e}")

        collect_sample_data(curr_sha256, curr_sample_path)

