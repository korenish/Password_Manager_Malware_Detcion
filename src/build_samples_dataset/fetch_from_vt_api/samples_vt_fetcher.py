import hashlib

import pandas as pd
import os

from build_samples_dataset.fetch_from_vt_api.vt_mitre_TTPs_fetcher import fetch_and_save_data_from_vt

DATA_DIR_PATH = "../../../samples/"
RESULT_FILE_PATH = "../../../resources/samples_fetched_ttps.csv"


def fetch_samples_data_from_vt(samples_paths: list) -> dict:
    all_shas256 = []

    for curr_sample_path in samples_paths:
        try:
            with open(curr_sample_path, "rb") as f:
                f_bytes = f.read()
                curr_sha256 = hashlib.sha256(f_bytes).hexdigest()
                all_shas256.append(curr_sha256)

        except Exception as e:
            print(e)

    return fetch_and_save_data_from_vt(all_shas256)


def process_fetched_vt_data(raw_data: dict) -> pd.DataFrame:
    list_shas256_info = raw_data['SHAS']
    process_data = {'sha256': [], 'tactics': [], 'techniques': []}

    for sha256_info in list_shas256_info:
        process_data['sha256'].append(sha256_info['sha256'])
        process_data['tactics'].append(sha256_info['tactics'])
        process_data['techniques'].append(sha256_info['techniques'])

    process_data_df = pd.DataFrame(data=process_data)

    return process_data_df


if __name__ == '__main__':
    all_samples_paths = [os.path.join(dp, f) for dp, dn, filenames in os.walk(DATA_DIR_PATH)
                         for f in filenames]

    raw_samples_fetched_data = fetch_samples_data_from_vt(all_samples_paths)

    samples_fetched_data = process_fetched_vt_data(raw_samples_fetched_data)

    samples_fetched_data.to_csv(RESULT_FILE_PATH, index=False)
