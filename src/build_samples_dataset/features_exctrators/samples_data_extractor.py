import pandas as pd
import hashlib
import os

from build_samples_dataset.features_exctrators.extract_pe_features import ExtractFeaturesFromSamplePE
from build_samples_dataset.features_exctrators.extract_strings_features import ExtractFeaturesFromStrings

POSITIVE_INDICATOR = 'PMM'

SAMPLES_EXTRACTED_DATA_PATH = '../../../resources/samples_extracted_data.csv'

DATA_DIR_PATH = "../../../samples/"


def extract_sample_data(sha256: str, sample_path: str) -> list:
    # Extract static strings features
    string_features_extractor = ExtractFeaturesFromStrings(sha256, sample_path)
    strings_features = string_features_extractor.extract()

    # Extract pe features
    pe_features_extractor = ExtractFeaturesFromSamplePE(sha256, sample_path)
    pe_features = pe_features_extractor.extract()

    return strings_features, pe_features


def gather_samples_extracted_data(samples_paths: list) -> pd.DataFrame:
    extracted_samples_data_dict = {
        'sha256': [],
        'MalwareFamily': [],
        'password_manager_name': [],
        'masterkey_counts': [],
        'password_counts': [],
        'pass_counts': [],
        'keys_counts': [],
        'strings_dll_imports': [],
        'strings_sus_functions': [],
        'pe_dll_imports': [],
        'pe_sus_import_functions': [],
        'label': []
    }

    for curr_sample_path in samples_paths:
        try:
            with open(curr_sample_path, "rb") as f:
                f_bytes = f.read()
                curr_sha256 = hashlib.sha256(f_bytes).hexdigest()
                print('-' * 100)
                print(curr_sha256)
                curr_pe_strings_features = extract_sample_data(curr_sha256, curr_sample_path)

                extracted_samples_data_dict['sha256'].append(curr_sha256)
                path_dirs = curr_sample_path.split('\\')
                extracted_samples_data_dict['MalwareFamily'].append(path_dirs[-2])

                if POSITIVE_INDICATOR in curr_sample_path:
                    extracted_samples_data_dict['label'].append(True)
                else:
                    extracted_samples_data_dict['label'].append(False)

                for curr_features in curr_pe_strings_features:
                    for feature in curr_features.keys():
                        extracted_samples_data_dict[feature].append(curr_features[feature])

        except Exception as e:
            print(curr_sample_path)
            print(e)

    return pd.DataFrame(data=extracted_samples_data_dict)


if __name__ == '__main__':
    all_samples_paths = [os.path.join(dp, f) for dp, dn, filenames in os.walk(DATA_DIR_PATH)
                         for f in filenames]

    samples_extracted_data_df = gather_samples_extracted_data(all_samples_paths)

    samples_extracted_data_df.to_csv(SAMPLES_EXTRACTED_DATA_PATH, index=False)
